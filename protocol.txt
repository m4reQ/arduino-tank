Instruction (host -> device)
length: 2 - 18 bytes
structure:
    -header---------- -arg1--- -arg2--- ... -arg16--
    00000000 00000000 00000000 00000000 ... 00000000
    ^^       ^
    ||       |_ args count
    ||_________ opcode
    |__________ continuation bit

- opcode:           Describes operation to be called (1-127)
                    Opcode 0 is considered invalid and WILL result in device halt.
- continuation bit: This bit indicates that an instruction is considered to
                    be a continuation for the previous one. This can be used to
                    provide instructions with more than 16 arguments.
                    If operation supports continuation it HAVE TO check if the
                    opcode in continuation instruction is the same as the previous one
                    and abort processing in case opcodes do not match, while
                    returning RES_CONT_OPCODE_MISMATCH signal to the host.
                    Instruction SHOULD ignore continuation bit if it doesn't provide
                    any additional behavior depending on it.
- args count:       Specifies amount of arguments provided for the operation.
                    It MUST NOT exceed 16 and in such case the device HAVE TO return
                    RES_ARG_COUNT_EXCEEDED signal to the host.

Result signal (device -> host)
length: 3 - n bytes
structure:
    00000000 00000000 00000000
    ^^       ^        ^
    ||       |        |_ data length
    ||       |__________ status
    ||__________________ processed opcode
    |___________________ data type

- data type:        Specifies type of data the result signal is returning.
                    0 for binary data, 1 for ANSI endcoded text. Detailed
                    structure of the returned data is specific to the instruction.
                    In case of returning text data, the message MAY or MAY NOT be
                    null-terminated. The length of the binary data CANNOT exceed the
                    length of 255 bytes.
- processed opcode: Specifies opcode of the instruction which returned the result.
- status:           Specific status code indicating instruction process result. For successfully
                    processed instruction, status code HAS TO be 0 (RES_SUCCESS).
- data length:      The length of the following result data to be received by the host.
                    For instruction that does not return any data this HAS TO be 0. All
                    instructions HAVE TO send exactly the amount of bytes specified by this
                    field.

The host HAVE TO always receive the result with all of its data if present.
